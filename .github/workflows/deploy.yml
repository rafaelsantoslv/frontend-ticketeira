name: Deploy Frontend for Ticketeira Unyx

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup PNPM cache
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install project
        run: pnpm install

      - name: Build project
        run: pnpm build

      - name: Login Docker Hub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

      - name: Build docker image
        run: docker build -t rafaelsantoslv442/ticketeira-frontend:latest .

      - name: Push image docker
        run: docker push rafaelsantoslv442/ticketeira-frontend:latest

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - name: Pull image from docker hub
        run: docker pull rafaelsantoslv442/ticketeira-frontend:latest

      - name: Remove old container
        run: |
          if docker ps -a | grep -q frontend_ticketeira; then
            docker rm -f frontend_ticketeira
          fi

      - name: Run docker container
        run: |
          docker run -d \
          -p 3000:3000 \
          -e NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
          --network ticketeira_default \
          --name frontend_ticketeira \
          rafaelsantoslv442/ticketeira-frontend:latest

      - name: Check if container is running
        run: |
          if ! docker ps | grep -q frontend_ticketeira; then
            echo "Container is not running"
            exit 1
          fi

      - name: Check container logs
        run: |
          sleep 10  # Wait for container to initialize
          docker logs frontend_ticketeira || true